// Created by Microsoft (R) C/C++ Compiler Version 12.00.8447.0 (04873188).
//
// project.tli
//
// Wrapper implementations for Win32 type library ../core/project.tlb
// compiler-generated file created 12/03/05 at 12:59:56 - DO NOT EDIT!

#pragma once

//
// dispinterface Automation2 wrapper method implementations
//

inline _variant_t Automation2::getLastBuildDate ( const _variant_t & OptionalArgs ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &OptionalArgs);
    return _variant_t(_result, false);
}

inline _variant_t Automation2::save ( const _variant_t & OptionalArgs ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &OptionalArgs);
    return _variant_t(_result, false);
}

inline _variant_t Automation2::errorText ( const _variant_t & OptionalArgs ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &OptionalArgs);
    return _variant_t(_result, false);
}

inline _variant_t Automation2::isalive ( const _variant_t & OptionalArgs ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &OptionalArgs);
    return _variant_t(_result, false);
}

inline _variant_t Automation2::output ( const _variant_t & OptionalArgs ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &OptionalArgs);
    return _variant_t(_result, false);
}

inline _variant_t Automation2::stop ( const _variant_t & OptionalArgs ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &OptionalArgs);
    return _variant_t(_result, false);
}

inline _variant_t Automation2::build ( const _variant_t & OptionalArgs ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &OptionalArgs);
    return _variant_t(_result, false);
}

inline _variant_t Automation2::init ( const _variant_t & OptionalArgs ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &OptionalArgs);
    return _variant_t(_result, false);
}

inline _variant_t Automation2::getPluginClass ( const _variant_t & OptionalArgs ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &OptionalArgs);
    return _variant_t(_result, false);
}

inline _variant_t Automation2::getPluginParm ( const _variant_t & position, const _variant_t & parm, const _variant_t & OptionalArgs ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x000c", &position, &parm, &OptionalArgs);
    return _variant_t(_result, false);
}

inline _variant_t Automation2::setPluginParm ( const _variant_t & position, const _variant_t & parm, const _variant_t & value, const _variant_t & OptionalArgs ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c", &position, &parm, &value, &OptionalArgs);
    return _variant_t(_result, false);
}

inline _variant_t Automation2::moveDownPlugin ( const _variant_t & OptionalArgs ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &OptionalArgs);
    return _variant_t(_result, false);
}

inline _variant_t Automation2::moveUpPlugin ( const _variant_t & OptionalArgs ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &OptionalArgs);
    return _variant_t(_result, false);
}

inline _variant_t Automation2::enablePlugin ( const _variant_t & position, const _variant_t & state, const _variant_t & OptionalArgs ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x000c", &position, &state, &OptionalArgs);
    return _variant_t(_result, false);
}

inline _variant_t Automation2::removePlugin ( const _variant_t & OptionalArgs ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &OptionalArgs);
    return _variant_t(_result, false);
}

inline _variant_t Automation2::appendPlugin ( const _variant_t & OptionalArgs ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &OptionalArgs);
    return _variant_t(_result, false);
}

inline _variant_t Automation2::Getconfig ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

inline _variant_t Automation2::Getprocess_id ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

inline _variant_t Automation2::Getdescription ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

inline _variant_t Automation2::Getproduct ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

inline _variant_t Automation2::Getcodename ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

inline _variant_t Automation2::Getcorepath ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

inline _variant_t Automation2::Getpath ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}
