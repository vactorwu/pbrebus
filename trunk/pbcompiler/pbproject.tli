// Created by Microsoft (R) C/C++ Compiler Version 12.00.8447.0 (27f1b912).
//
// pbproject.tli
//
// Wrapper implementations for Win32 type library ..\pbproject\debug\pbproject.dll
// compiler-generated file created 05/17/02 at 20:39:41 - DO NOT EDIT!

#pragma once

//
// interface Ipbproject wrapper method implementations
//

inline HRESULT Ipbproject::load ( _bstr_t path ) {
    HRESULT _hr = raw_load(path);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

inline _bstr_t Ipbproject::Getlibraries ( ) {
    BSTR _result;
    HRESULT _hr = get_libraries(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

inline _bstr_t Ipbproject::Getcontent ( ) {
    BSTR _result;
    HRESULT _hr = get_content(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

inline HRESULT Ipbproject::open ( _bstr_t sid ) {
    HRESULT _hr = raw_open(sid);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

inline IDispatchPtr Ipbproject::libraryNode ( ) {
    IDispatch * _result;
    HRESULT _hr = raw_libraryNode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

inline _bstr_t Ipbproject::Getpbversion ( ) {
    BSTR _result;
    HRESULT _hr = get_pbversion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

inline long Ipbproject::Getsession ( ) {
    long _result;
    HRESULT _hr = get_session(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

inline IDispatchPtr Ipbproject::childNode ( _bstr_t libname, long bRefresh ) {
    IDispatch * _result;
    HRESULT _hr = raw_childNode(libname, bRefresh, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

inline _bstr_t Ipbproject::libraryPath ( _bstr_t name ) {
    BSTR _result;
    HRESULT _hr = raw_libraryPath(name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

inline IDispatchPtr Ipbproject::propertiesNode ( ) {
    IDispatch * _result;
    HRESULT _hr = raw_propertiesNode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}
